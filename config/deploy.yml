# Name of your application. Used to uniquely configure containers.
service: backend

# Name of the container image.
image: nischalgenese/backend

# Deploy to these servers.
servers:
  web:
    hosts:
      - 15.206.68.164
    options:
      # This network must be created before hand in the server either manually or using Kamal hooks
      network: backend

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: nischalgenese

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    MAX_WORKERS: 3
  secret:
    - MYSQL_PASSWORD
    - MYSQL_USER
    - MYSQL_HOST
    - MYSQL_DATABASE
    - ALLOWED_ORIGINS

# Use a different ssh user than root
ssh:
  user: ubuntu

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: mysql:8.0.36-debian
    host: 15.206.68.164
    port: 3306
    env:
      clear:
        MYSQL_ROOT_HOST: '%'
      secret:
        - MYSQL_PASSWORD
        - MYSQL_ROOT_PASSWORD
        - MYSQL_DATABASE
        - MYSQL_HOST
        - MYSQL_USER
    files:
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/mysql
    options:
      network: backend
      user: 1000:1000

# Configure custom arguments for Traefik. Be sure to reboot traefik when you modify it.
traefik:
  image: traefik:v3.0.0-beta5
  options:
    publish:
      - "8080:8080"
    volume: "/letsencrypt/acme.json:/letsencrypt/acme.json"
    network: "backend"
  args:
    api.dashboard: true
    api.insecure: true
    log.level: INFO
    accesslog.format: json
    accesslog.filters.statusCodes: "400-599"
    accesslog.filters.retryAttempts: true
    accesslog.filters.minDuration: 101ms

    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
  labels:
    traefik.http.routers.dashboard.rule: Host(`traefikb.valmikiai.com`)
    traefik.http.routers.dashboard.service: api@internal

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /
  port: 80
  interval: 5s

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# If your app is using the Sprockets gem, ensure it sets `config.assets.manifest`.
# See https://github.com/basecamp/kamal/issues/626 for details
#
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
